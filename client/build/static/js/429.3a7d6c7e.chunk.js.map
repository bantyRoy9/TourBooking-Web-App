{"version":3,"file":"static/js/429.3a7d6c7e.chunk.js","mappings":"oOA+EA,EAxEa,WACX,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAyBC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,SAA9CC,EAAR,EAAQA,MAAOD,EAAf,EAAeA,MACTE,GAAeC,EAAAA,EAAAA,QAAO,MAC5B,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAuBA,OArBAC,EAAAA,EAAAA,YAAU,WACRN,IAASO,EAAAA,EAAAA,IAAMP,EAAO,KACtBD,IAAUA,EAAMS,QAAUb,GAASc,EAAAA,EAAAA,OACnC,IAKMC,EAAkB,IAAIC,sBALN,SAACC,GACrB,IAAOC,GAAP,OAAgBD,EAAhB,MACAP,EAAaQ,EAAMC,kBAG2C,CAC9DC,KAAM,KACNC,UAAW,MAMb,OAJIf,EAAagB,SACfP,EAAgBQ,QAAQjB,EAAagB,SAGhC,WACLP,EAAgBS,gBAEjB,KAGD,iCACE,gBAAKC,UAAU,SAAf,UACE,kBAAMA,UAAU,cAAhB,WACE,gBAAKA,UAAU,mBACf,gBAAKA,UAAU,sBACf,gBAAKA,UAAU,mBAAf,oEAGA,iBAAKA,UAAU,kBAAf,WACE,SAAC,EAAAC,QAAD,CAASC,GAAG,OAAZ,UACE,mBAAQF,UAAU,UAAlB,0BAEF,SAAC,EAAAC,QAAD,CAASC,GAAG,WAAZ,UACE,mBAAQF,UAAU,WAAlB,wCAKR,iBAAKA,UAAU,sBAAf,WACE,4CACA,SAAC,KAAD,CAAMG,OAAO,kBAEf,qBAASH,UAAU,cAAnB,WACE,qDACA,qCAAW,cAAGA,UAAU,QAAb,4BACX,8LAEF,oBAASI,IAAKvB,EAAcmB,UAAS,kBAAahB,EAAY,GAAK,kBAA9B,cAArC,SACGL,GAASA,EAAMS,OACdT,EAAM0B,KAAI,SAACC,GAAD,OACR,SAAC,EAAAL,QAAD,CAAwBC,GAAE,gBAAWI,EAAKC,KAA1C,UACE,SAAC,KAAD,CAAUD,KAAMA,KADJA,EAAKC,SAKrB,gBAAKP,UAAU,WAAf,UACE","sources":["Views/HomeView/Home.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { TourCard, FilterForm as Form, Alert } from \"../../Components\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllTour } from \"../../Redux\";\r\nimport \"./home.css\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const { error, tours } = useSelector((state) => state.tours);\r\n  const containerRef = useRef(null);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    error && Alert(error, \"E\");\r\n    tours && !tours.length && dispatch(getAllTour());\r\n    const revealSection = (entries) => {\r\n      const [entry] = entries;\r\n      setIsVisible(entry.isIntersecting);\r\n    };\r\n\r\n    const sectionObserver = new IntersectionObserver(revealSection, {\r\n      root: null,\r\n      threshold: 0.15,\r\n    });\r\n    if (containerRef.current) {\r\n      sectionObserver.observe(containerRef.current);\r\n    }\r\n\r\n    return () => {\r\n      sectionObserver.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"banner\">\r\n        <main className=\"home-slider\">\r\n          <div className=\"home-location\"></div>\r\n          <div className=\"home-sublocation\"></div>\r\n          <div className=\"home-description\">\r\n            Recognizable, lovely,passionate and forever yours ...\r\n          </div>\r\n          <div className=\"home-slider-btn\">\r\n            <NavLink to=\"/des\">\r\n              <button className=\"des-btn\">Discover </button>\r\n            </NavLink>\r\n            <NavLink to=\"/booking\">\r\n              <button className=\"book-btn\">Book your trip </button>\r\n            </NavLink>\r\n          </div>\r\n        </main>\r\n      </div>\r\n      <div className=\"home-form-container\">\r\n        <span>Search Tours</span>\r\n        <Form styles=\"home-form\" />\r\n      </div>\r\n      <section className='homeHeading'>\r\n        <span>GREAT PLACES TO VISIT</span>\r\n        <h1>Search <b className=\"spans\">and Enjoy!</b></h1>\r\n        <span> Compellingly embrace empowered e-business after user friendly intellectual capital. Interactively actualize front-end processes witheffective convergence.</span>\r\n      </section>\r\n      <section ref={containerRef} className={`section ${isVisible ? \"\" : \"section--hidden\"} container`}>\r\n        {tours && tours.length ? (\r\n          tours.map((tour) => (\r\n            <NavLink key={tour._id} to={`/tour/${tour._id}`}>\r\n              <TourCard tour={tour} />\r\n            </NavLink>\r\n          ))\r\n        ) : (\r\n          <div className=\"notFound\">\r\n            <h1>Tour not found</h1>\r\n          </div>\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["dispatch","useDispatch","useSelector","state","tours","error","containerRef","useRef","useState","isVisible","setIsVisible","useEffect","Alert","length","getAllTour","sectionObserver","IntersectionObserver","entries","entry","isIntersecting","root","threshold","current","observe","disconnect","className","NavLink","to","styles","ref","map","tour","_id"],"sourceRoot":""}